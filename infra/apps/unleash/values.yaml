global:
  defaultStorageClass: auto-ebs-sc
  storageClass: auto-ebs-sc

image:
  repository: 386757133934.dkr.ecr.us-east-1.amazonaws.com/docker-hub/unleashorg/unleash-server

replicaCount: 2

tolerations:
  - key: "spotInstance"
    operator: "Equal"
    value: "true"
    effect: "NoSchedule"

ingress:
  enabled: true
  className: "alb"
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: 'ip'
    alb.ingress.kubernetes.io/group.name: "sandbox-external"
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:386757133934:certificate/f3618733-cee3-4704-8bb3-2ba753cbd56e
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS13-1-2-2021-06
  hosts:
    - host: "feature-toggles.tw-ocean.com"
      paths:
        - path: /
          pathType: Prefix
  tls: [ ]

imagePullSecrets:
  - name: dockerhub-secret

existingSecrets:
  - name: UNLEASH_DEFAULT_ADMIN_PASSWORD
    valueFrom:
      secretKeyRef:
        name: unleash-admin
        key: UNLEASH_DEFAULT_ADMIN_PASSWORD
  - name: UNLEASH_DEFAULT_ADMIN_USERNAME
    valueFrom:
      secretKeyRef:
        name: unleash-admin
        key: UNLEASH_DEFAULT_ADMIN_USERNAME

service:
  type: ClusterIP
  port: 4242
  annotations:
    external-dns.alpha.kubernetes.io/hostname: feature-toggles.tw-ocean.com
    external-dns.alpha.kubernetes.io/ttl: "60"

dbConfig:
  useExistingSecret:
    name: "unleash-postgresql"
    key: "postgres-password"

postgresql:
  image:
    registry: 386757133934.dkr.ecr.us-east-1.amazonaws.com/docker-hub
    repository: bitnami/postgresql
  auth:
    existingSecret: "unleash-postgresql"
    secretKeys:
      adminPasswordKey: postgres-password
      userPasswordKey: password
  readReplicas:
    replicaCount: 2

deploymentAnnotations:
  reloader.stakater.com/auto: "true"

env:
  - name: CHECK_VERSION
    value: "false"
  - name: SEND_TELEMETRY
    value: "false"
  - name: UNLEASH_URL
    value: "https://feature-toggles.tw-ocean.com"

podLabels:
  env: fargate


readinessProbe:
  failureThreshold: 3
  initialDelaySeconds: 30
  periodSeconds: 10
  successThreshold: 2
  timeoutSeconds: 2

livenessProbe:
  failureThreshold: 3
  initialDelaySeconds: 30
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 2

startupProbe:
  failureThreshold: 3
  initialDelaySeconds: 120
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 2

resources: {}
