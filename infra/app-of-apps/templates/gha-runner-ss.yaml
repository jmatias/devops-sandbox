{{ if .Values.actionsRunnerController.enabled }}

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: gha-runner-ss
  namespace: argocd
  annotations:
    argocd-image-updater.argoproj.io/write-back-method: git
    argocd-image-updater.argoproj.io/image-list: ghcr.io/actions/actions-runner
    argocd-image-updater.argoproj.io/backstage.helm.image-tag: template.spec.containers[0].image
    argocd-image-updater.argoproj.io/update-strategy: semver
    argocd.argoproj.io/sync-wave: "2"
    argocd.argoproj.io/compare-options: IgnoreExtraneous
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: github-actions
    server: {{ .Values.spec.destination.server }}
  project: default
  source:
    chart: gha-runner-scale-set
    repoURL: ghcr.io/actions/actions-runner-controller-charts
    targetRevision: 0.10.*
    helm:
      releaseName: javier-runner
      valuesObject:
{{/*        annotations:*/}}
{{/*          argocd.argoproj.io/compare-options: IgnoreExtraneous*/}}
        runnerScaleSetName: javier-runner
        githubConfigUrl: https://github.com/jmatiascabrera
        githubConfigSecret: github-auth
        runnerGroup: javier-k8s-runner-group
        controllerServiceAccount:
          namespace: github-actions
          name: github-actions-sa
        containerMode:
          type: "dind"

        resourceMeta:
{{/*          autoscalingRunnerSet:*/}}
{{/*            labels:*/}}
{{/*              key: value*/}}
{{/*            annotations:*/}}
{{/*              key: value*/}}
{{/*          githubConfigSecret:*/}}
{{/*            labels:*/}}
{{/*              key: value*/}}
{{/*            annotations:*/}}
{{/*              key: value*/}}
{{/*          kubernetesModeRole:*/}}
{{/*            labels:*/}}
{{/*              key: value*/}}
{{/*            annotations:*/}}
{{/*              key: value*/}}
{{/*          kubernetesModeRoleBinding:*/}}
{{/*            labels:*/}}
{{/*              key: value*/}}
{{/*            annotations:*/}}
{{/*              key: value*/}}
{{/*          kubernetesModeServiceAccount:*/}}
{{/*            labels:*/}}
{{/*              key: value*/}}
{{/*            annotations:*/}}
{{/*              key: value*/}}
{{/*          managerRole:*/}}
{{/*            labels:*/}}
{{/*              key: value*/}}
{{/*            annotations:*/}}
{{/*              key: value*/}}
{{/*          managerRoleBinding:*/}}
{{/*            labels:*/}}
{{/*              key: value*/}}
{{/*            annotations:*/}}
{{/*              key: value*/}}
{{/*          noPermissionServiceAccount:*/}}
{{/*            labels:*/}}
{{/*              key: value*/}}
{{/*            annotations:*/}}
{{/*              eks.amazonaws.com/role-arn: arn:aws:iam::386757133934:role/github-actions-role*/}}
{{/*        containerMode:*/}}
{{/*          type: "dind"*/}}
{{/*          kubernetesModeWorkVolumeClaim:*/}}
{{/*            accessModes: [ "ReadWriteOnce" ]*/}}
{{/*            storageClassName: "dynamic-blob-storage"*/}}
{{/*            resources:*/}}
{{/*              requests:*/}}
{{/*                storage: 2Gi*/}}

        maxRunners: 10



  syncPolicy:
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
    {{- if .Values.actionsRunnerController.autoSync }}
    automated:
      prune: true
      selfHeal: true

    {{- end }}

    retry:
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 10m
      limit: 10
{{- end }}
