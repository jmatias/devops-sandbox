{{ if .Values.backstage.ingress.enabled }}

{{- if eq (lower .Values.environment) "aws" }}

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: 'ip'
    alb.ingress.kubernetes.io/load-balancer-name: argocd

  name: backstage
  namespace: backstage
spec:
  rules:
    - http:
        paths:
          - path: /
            backend:
              service:
                name: backstage
                port:
                  name: backend
            pathType: Prefix

{{ else }}

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backstage
  namespace: backstage
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/ssl-passthrough: "false"
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /backstage
            backend:
              service:
                name: backstage
                port:
                  name: http-backend
            pathType: Prefix

{{- end }}

{{- end }}
